{"ast":null,"code":"import { ADD_NEW_COMPAIGN } from '../DashBoard/components/Table/constants';\nimport initialState from './initialState';\nexport default ((state = initialState, action) => {\n  const type = action.type,\n        payload = action.payload;\n\n  switch (type) {\n    case ADD_NEW_COMPAIGN:\n      const campaignsData = state.campaignsData.slice();\n      const length = campaignsData.length;\n\n      for (let i = 0; i < length; i++) if (campaignsData[i].id && campaignsData[i].id === payload.id) {\n        campaignsData.splice(i, 1);\n        campaignsData.splice(i, 0, payload);\n        break;\n      }\n\n      return Object.assign({}, state, {\n        campaignsData: [...campaignsData]\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/mumukshmeghwal/Desktop/demo/compaignManagementApp/src/components/home/reducer.js"],"names":["ADD_NEW_COMPAIGN","initialState","state","action","type","payload","campaignsData","slice","length","i","id","splice","Object","assign"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,yCAAjC;AAEA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,gBAAe,CAACC,KAAK,GAAGD,YAAT,EAAuBE,MAAvB,KAAmC;AAAA,QACxCC,IADwC,GACtBD,MADsB,CACxCC,IADwC;AAAA,QAClCC,OADkC,GACtBF,MADsB,CAClCE,OADkC;;AAGhD,UAAOD,IAAP;AACE,SAAKJ,gBAAL;AACI,YAAMM,aAAa,GAAGJ,KAAK,CAACI,aAAN,CAAoBC,KAApB,EAAtB;AACA,YAAMC,MAAM,GAAGF,aAAa,CAACE,MAA7B;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,MAApB,EAA4BC,CAAC,EAA7B,EACA,IAAIH,aAAa,CAACG,CAAD,CAAb,CAAiBC,EAAjB,IAAuBJ,aAAa,CAACG,CAAD,CAAb,CAAiBC,EAAjB,KAAwBL,OAAO,CAACK,EAA3D,EAA+D;AAC7DJ,QAAAA,aAAa,CAACK,MAAd,CAAqBF,CAArB,EAAwB,CAAxB;AACAH,QAAAA,aAAa,CAACK,MAAd,CAAqBF,CAArB,EAAwB,CAAxB,EAA2BJ,OAA3B;AACE;AACH;;AACH,aAAOO,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBX,KAAlB,EAAyB;AAC9BI,QAAAA,aAAa,EAAE,CAAE,GAAGA,aAAL;AADe,OAAzB,CAAP;;AAGF;AACI,aAAOJ,KAAP;AAdN;AAgBD,CAnBD","sourcesContent":["import { ADD_NEW_COMPAIGN } from '../DashBoard/components/Table/constants';\n\nimport initialState from './initialState';\n\nexport default (state = initialState, action ) => {\n  const { type, payload } = action;\n\n  switch(type) {\n    case ADD_NEW_COMPAIGN:\n        const campaignsData = state.campaignsData.slice();\n        const length = campaignsData.length;\n        for (let i = 0; i < length; i++)\n        if (campaignsData[i].id && campaignsData[i].id === payload.id) {\n          campaignsData.splice(i, 1);\n          campaignsData.splice(i, 0, payload)\n            break;\n        }\n      return Object.assign({}, state, {\n        campaignsData: [ ...campaignsData],\n      })\n    default:\n        return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}